version: 2.0
jobs:
 build-pr:
   # (pre-built) images: https://circleci.com/docs/2.0/circleci-images/
   machine: true
   steps:
     - checkout
     - run:
         name: Echo var
         command: |
           echo $CIRCLE_PULL_REQUEST
           if [ -z "$CIRCLE_PULL_REQUEST" ]
           then
             echo "\$CIRCLE_PULL_REQUEST is empty"
           else
             echo "\$CIRCLE_PULL_REQUEST is not empty"
           fi

 build-branch:
   # (pre-built) images: https://circleci.com/docs/2.0/circleci-images/
   machine: true
   steps:
     - checkout
     - run:
         name: Install Sonar Scanner
         command: |
           wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-3.2.0.1227-linux.zip
           sudo unzip -d /opt/ sonar-scanner-cli-3.2.0.1227-linux.zip
           sudo echo "sonar.host.url=http://137.135.82.179" | sudo tee -a /opt/sonar-scanner-3.2.0.1227-linux/conf/sonar-scanner.properties
           rm sonar-scanner-cli-3.2.0.1227-linux.zip
     - run:
         name: Run Sonar Scanner
         command: |
           /opt/sonar-scanner-3.2.0.1227-linux/bin/sonar-scanner -Dsonar.login=$SONAR_LOGIN -Dsonar.password=$SONAR_PASS
     - run:
         name: Build
         command: |
           docker build -t $CIRCLE_PROJECT_REPONAME:${CIRCLE_BRANCH/\//-} .
           mkdir -p docker-cache
           docker save -o docker-cache/built-image.tar $CIRCLE_PROJECT_REPONAME:${CIRCLE_BRANCH/\//-}
     - persist_to_workspace:
         root: .
         paths:
           - docker-cache

 release:
   machine: true
   steps:
     - attach_workspace:
         at: .
     - run:
         name: Release
         command: |  
           docker load < docker-cache/built-image.tar
           docker login -u $DOCKER_USER -p $DOCKER_PASS $DOCKER_SERVER
           if [ "${CIRCLE_BRANCH}" == "dev" ]; then
               docker tag $CIRCLE_PROJECT_REPONAME:$CIRCLE_BRANCH $DOCKER_SERVER/$CIRCLE_PROJECT_REPONAME:staging
               docker push $DOCKER_SERVER/$CIRCLE_PROJECT_REPONAME:staging
           elif [ "${CIRCLE_BRANCH}" == "master" ]; then
               docker tag $CIRCLE_PROJECT_REPONAME:$CIRCLE_BRANCH $DOCKER_SERVER/$CIRCLE_PROJECT_REPONAME:production
               docker push $DOCKER_SERVER/$CIRCLE_PROJECT_REPONAME:production
           fi
           docker images

 deploy:
   machine: true
   steps:
     - run:
         name: Deploy
         command: |
           ssh -o StrictHostKeyChecking=no $STAGING_USER@$STAGING_HOST /home/$STAGING_USER/$SYNC_SCRIPT
           ssh -o StrictHostKeyChecking=no $STAGING_USER@$STAGING_HOST /home/$STAGING_USER/$RELOAD_SCRIPT

workflows:
 version: 2
 build_release_and_deploy:
   jobs:
     - build-pr:
         filters:
           branches:
             ignore:
               - master
               - dev
     - build-branch:
         filters:
           branches:
             only:
               - master
               - dev
     - release-branch:
         requires:
           - build-branch
         filters:
           branches:
             only:
               - master
               - dev
     - deploy-branch:
         requires:
           - release-branch
         filters:
           branches:
             only:
               - master
               - dev

