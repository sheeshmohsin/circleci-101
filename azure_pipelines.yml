# Docker image
# Build a Docker image to deploy, run, or push to a container registry.
# Add steps that use Docker Compose, tag images, push to a registry, run an image, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master
- dev

pr:
- master
- dev

variables:
- group: my-variable-group
- name: imageName
  value: '${BUILD_REPOSITORY_NAME##*/}:latest'

jobs:
- job: build_pr
  pool:
    vmImage: 'Ubuntu-16.04'
  condition: eq(variables['Build.Reason'], 'PullRequest')
  steps:
  - task: DownloadSecureFile@1
    name: slackPost
    inputs:
      secureFile: slackpost.sh
  - script: |
      chmod +x ${SLACKPOST_SECUREFILEPATH}
      ${SLACKPOST_SECUREFILEPATH} $(SLACK_HOOK) color:#f4e21d "<https://dev.azure.com/vvents/web/build.aspx?pcguid=${SYSTEM_COLLECTIONID}&builduri=${BUILD_BUILDURI}|Starting build stage> for project <https://github.com/${BUILD_REPOSITORY_NAME}/pull/${SYSTEM_PULLREQUEST_PULLREQUESTNUMBER}|${BUILD_REPOSITORY_NAME##*/}#${BUILD_SOURCEBRANCHNAME/\//-}>"
    displayName: 'slack_notify'
  - script: |
      git config --global user.email "$(GIT_USER_EMAIL)"
      git config --global user.name "$(GIT_USER_NAME)"
      git checkout $(System.PullRequest.SourceBranch)
      git checkout $(System.PullRequest.TargetBranch)
      git merge $(System.PullRequest.SourceBranch)
      docker login -u $(DOCKER_USER) -p $(DOCKER_PASS) $(DOCKER_SERVER)
      docker build -f Dockerfile -t $(imageName) .
    displayName: 'merge_and_build'
  - script: |
      chmod +x ${SLACKPOST_SECUREFILEPATH}
      ${SLACKPOST_SECUREFILEPATH} $(SLACK_HOOK) color:#10c95a "<https://dev.azure.com/vvents/web/build.aspx?pcguid=${SYSTEM_COLLECTIONID}&builduri=${BUILD_BUILDURI}|Build stage> succeeded for project <https://github.com/${BUILD_REPOSITORY_NAME}/pull/${SYSTEM_PULLREQUEST_PULLREQUESTNUMBER}|${BUILD_REPOSITORY_NAME##*/}#${BUILD_SOURCEBRANCHNAME/\//-}>"
    displayName: 'slack_notify'

